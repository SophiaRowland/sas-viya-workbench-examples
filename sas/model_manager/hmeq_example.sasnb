[{"kind":1,"language":"markdown","value":"# SAS Viya Workbench & SAS Model Manager - Simple HMEQ Example \r\nIn this simple example, you will create two SAS models on SAS Viya Workbench and register them both into SAS Model Manager on SAS Viya. This requires having access to an installation of SAS Model Manager on SAS Viya. The first model you will develop creates data step score code whereas the second model creates an analytical store file.  \r\n    \r\nTo ensure you can interact with SAS Viya, your administrator may need to whitelist the IP address of you Workbench. You can find the IP address by opening a terminal on Workbench, typing _curl ip.me_ and hitting enter. After your Workbench IP address is whitelisted for the SAS Viya environment, follow [these steps](https://go.documentation.sas.com/doc/en/workbenchcdc/default/vwbcasml/vwbcasml_registermodel_details06.htm) to authenticate to the SAS Viya environment and generate the access token. These steps are also available in the authentication_example.sasnb file and the access token can be saved using the myToken.sas file. \r\n    \r\nUse the cells below to save your server URL.","outputs":[]},{"kind":2,"language":"sas","value":"%let myServerURL=\"insert-server-url-here\";\r\n%put &=myServerURL","outputs":[]},{"kind":1,"language":"markdown","value":"On the properties tab of the project in SAS Model Manager, find the project UUID. Create a project if there is not one already available. Copy the project UUID and paste it below.","outputs":[]},{"kind":2,"language":"sas","value":"%let myProjectID=\"insert-project-id-here\";\r\n%put &=myProjectID","outputs":[]},{"kind":1,"language":"markdown","value":"    \r\nNext, load the hmeq data into your work library.  ","outputs":[]},{"kind":2,"language":"sas","value":"data hmeq;\r\n    set sampsio.hmeq;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Train a simple logistic regression and save the data step score code. ","outputs":[]},{"kind":2,"language":"sas","value":"proc logistic data = work.hmeq;\r\n   class job;\r\n   model bad = loan value mortdue debtinc derog job;\r\n   code file=\"logisticCode_hmeq.sas\";\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Finally, register our model into your project on SAS Viya. ","outputs":[]},{"kind":2,"language":"sas","value":"proc registermodel\r\n      name = \"Logistic Regression\"\r\n      data = work.hmeq\r\n      algorithm = LOGISTIC\r\n      function = CLASSIFICATION\r\n      modeler = \"your-username\"\r\n      server = &myServerURL\r\n      oauthtoken = \"myToken\"\r\n      replace;\r\n   project id =  &myProjectID;\r\n   code file = \"logisticCode_hmeq.sas\";\r\n   target bad / level=binary event=\"1\";\r\n   assessment;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"After this block completes, you should be able to see model in your SAS Model Manager project. \r\n\r\nNext, try a model that generates an analytical store, like a Decision Tree model. ","outputs":[]},{"kind":2,"language":"sas","value":"proc treesplit data = work.hmeq;\r\n   input loan value mortdue debtinc derog / level = interval;\r\n   input job / level = nominal;\r\n   target bad / level = nominal;\r\n   prune none;\r\n   saveState rstore = work.treeStore_hmeq;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Download the analytical store to a binary file. ","outputs":[]},{"kind":2,"language":"sas","value":"proc astore;\r\n   download rstore = work.treeStore_hmeq\r\n            store = \"treeAstore.sasast\";\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"You can save the astore file locally and import it directly to SAS Model Manager. This file will have everything it needs to execute after import into SAS Model Manager, but it will lack the assessment files for model comparison.  \r\n\r\nBut, running the next block will register the model into SAS Model Manager with these files, so I suggest taking that route. ","outputs":[]},{"kind":2,"language":"sas","value":"proc registermodel\r\n      name = \"Decision Tree\"\r\n      data = work.hmeq\r\n      algorithm = TREE\r\n      function = CLASSIFICATION\r\n      modeler = \"your-username\"\r\n      server = &myServerURL\r\n      oauthtoken = \"myToken\"\r\n      replace;\r\n   project id =  &myProjectID;\r\n   astoremodel store = \"treeAstore.sasast\";\r\n   target bad / level=binary event=\"1\";\r\n   assessment;\r\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"Now, you should have two models in SAS Mode Manager ready to execute!\r\n***","outputs":[]}]